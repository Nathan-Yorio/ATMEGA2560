
ADC.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000032  00800200  00000858  000008ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000858  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800232  00800232  0000091e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000091e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000097c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  000009bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001355  00000000  00000000  00000a94  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f9a  00000000  00000000  00001de9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000007e8  00000000  00000000  00002d83  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000170  00000000  00000000  0000356c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000655  00000000  00000000  000036dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002bf  00000000  00000000  00003d31  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000088  00000000  00000000  00003ff0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e8 e5       	ldi	r30, 0x58	; 88
  fc:	f8 e0       	ldi	r31, 0x08	; 8
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a2 33       	cpi	r26, 0x32	; 50
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a2 e3       	ldi	r26, 0x32	; 50
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a8 33       	cpi	r26, 0x38	; 56
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	5f d0       	rcall	.+190    	; 0x1de <main>
 120:	99 c3       	rjmp	.+1842   	; 0x854 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <init_ADC>:
************************************************************************************/
#include <avr/io.h>

void init_ADC(void)
{
	ADMUX |= (1 << REFS0);			// REFS0: 0, REFS1: 1 0x40
 124:	ec e7       	ldi	r30, 0x7C	; 124
 126:	f0 e0       	ldi	r31, 0x00	; 0
 128:	80 81       	ld	r24, Z
 12a:	80 64       	ori	r24, 0x40	; 64
 12c:	80 83       	st	Z, r24
	
	ADCSRA = 0x07;					// select the ADC clock frequency - Clock / 128
 12e:	ea e7       	ldi	r30, 0x7A	; 122
 130:	f0 e0       	ldi	r31, 0x00	; 0
 132:	87 e0       	ldi	r24, 0x07	; 7
 134:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADEN);			// ADEN, ADC Enable 0x80
 136:	80 81       	ld	r24, Z
 138:	80 68       	ori	r24, 0x80	; 128
 13a:	80 83       	st	Z, r24
 13c:	08 95       	ret

0000013e <read_ADC>:

	
uint8_t read_ADC(uint8_t chan)		//pass which channel you want to this
{
	uint8_t value;					// 8-bit value to hold the result
	ADMUX |= (1 << ADLAR);			// Left Justified For 8 Bits 0x20
 13e:	ec e7       	ldi	r30, 0x7C	; 124
 140:	f0 e0       	ldi	r31, 0x00	; 0
 142:	90 81       	ld	r25, Z
 144:	90 62       	ori	r25, 0x20	; 32
 146:	90 83       	st	Z, r25
	
	ADMUX  = (ADMUX & 0xE0) | chan;	// Start with zeros 0b11100000
 148:	90 81       	ld	r25, Z
 14a:	90 7e       	andi	r25, 0xE0	; 224
 14c:	89 2b       	or	r24, r25
 14e:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADSC);  // ADSC, ADC Start Conversion
 150:	ea e7       	ldi	r30, 0x7A	; 122
 152:	f0 e0       	ldi	r31, 0x00	; 0
 154:	80 81       	ld	r24, Z
 156:	80 64       	ori	r24, 0x40	; 64
 158:	80 83       	st	Z, r24


	printf("\n8bits");
 15a:	8e e0       	ldi	r24, 0x0E	; 14
 15c:	92 e0       	ldi	r25, 0x02	; 2
 15e:	9f 93       	push	r25
 160:	8f 93       	push	r24
 162:	b8 d0       	rcall	.+368    	; 0x2d4 <printf>
	
	while( (ADCSRA & 0x10) == 0 )	// wait for conversion to be completed
 164:	0f 90       	pop	r0
 166:	0f 90       	pop	r0
 168:	ea e7       	ldi	r30, 0x7A	; 122
 16a:	f0 e0       	ldi	r31, 0x00	; 0
 16c:	80 81       	ld	r24, Z
 16e:	84 ff       	sbrs	r24, 4
 170:	fd cf       	rjmp	.-6      	; 0x16c <read_ADC+0x2e>
	{
	}
	
	value = ADCH;			// get the upper 8-bits
 172:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x700079>
	ADCSRA = ADCSRA | 0x10;	// clear ADC Interrupt Flag
 176:	ea e7       	ldi	r30, 0x7A	; 122
 178:	f0 e0       	ldi	r31, 0x00	; 0
 17a:	90 81       	ld	r25, Z
 17c:	90 61       	ori	r25, 0x10	; 16
 17e:	90 83       	st	Z, r25
	
	return value;			// return the value of the conversion
}
 180:	08 95       	ret

00000182 <readten_ADC>:

uint16_t readten_ADC(uint16_t chan)
{
	uint16_t other_value;			// 16-bit value to hold the result
	ADMUX &= ~(1 << ADLAR);			// Left Justified For 8 Bits 0x20, turned back off
 182:	ec e7       	ldi	r30, 0x7C	; 124
 184:	f0 e0       	ldi	r31, 0x00	; 0
 186:	90 81       	ld	r25, Z
 188:	9f 7d       	andi	r25, 0xDF	; 223
 18a:	90 83       	st	Z, r25
	
	ADMUX = (ADMUX & 0xE0) | chan;	// Start with zeros 0b11100000
 18c:	90 81       	ld	r25, Z
 18e:	90 7e       	andi	r25, 0xE0	; 224
 190:	89 2b       	or	r24, r25
 192:	80 83       	st	Z, r24
	ADCSRA = ADCSRA | (1 << ADSC);  // ADSC, ADC Start Conversion
 194:	ea e7       	ldi	r30, 0x7A	; 122
 196:	f0 e0       	ldi	r31, 0x00	; 0
 198:	80 81       	ld	r24, Z
 19a:	80 64       	ori	r24, 0x40	; 64
 19c:	80 83       	st	Z, r24
	
	printf("\n16bits");
 19e:	85 e1       	ldi	r24, 0x15	; 21
 1a0:	92 e0       	ldi	r25, 0x02	; 2
 1a2:	9f 93       	push	r25
 1a4:	8f 93       	push	r24
 1a6:	96 d0       	rcall	.+300    	; 0x2d4 <printf>
	
	while( (ADCSRA & 0x10) == 0 )	// wait for conversion to be completed
 1a8:	0f 90       	pop	r0
 1aa:	0f 90       	pop	r0
 1ac:	ea e7       	ldi	r30, 0x7A	; 122
 1ae:	f0 e0       	ldi	r31, 0x00	; 0
 1b0:	80 81       	ld	r24, Z
 1b2:	84 ff       	sbrs	r24, 4
 1b4:	fd cf       	rjmp	.-6      	; 0x1b0 <readten_ADC+0x2e>
	{
	}
	
	other_value = ADCL;			// get the lower 8-bits
 1b6:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x700078>
	other_value |= (ADCH << 8);
 1ba:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x700079>
	ADCSRA = ADCSRA | 0x10;	// clear ADC Interrupt Flag
 1be:	ea e7       	ldi	r30, 0x7A	; 122
 1c0:	f0 e0       	ldi	r31, 0x00	; 0
 1c2:	90 81       	ld	r25, Z
 1c4:	90 61       	ori	r25, 0x10	; 16
 1c6:	90 83       	st	Z, r25
		
	return other_value;			// return the value of the conversion
 1c8:	90 e0       	ldi	r25, 0x00	; 0
}
 1ca:	92 2b       	or	r25, r18
 1cc:	08 95       	ret

000001ce <io_init>:


void io_init(void)
{
	//Input
	DDRA = 0x00; //PORTA is inputs
 1ce:	11 b8       	out	0x01, r1	; 1
	PORTA = ~0x00; //negative logic for pullup resistors
 1d0:	8f ef       	ldi	r24, 0xFF	; 255
 1d2:	82 b9       	out	0x02, r24	; 2
	//Analog Input
	DDRF = 0x00;
 1d4:	10 ba       	out	0x10, r1	; 16
	PORTF =~0x00; //maybe 0xFF something something ADC is different.
 1d6:	81 bb       	out	0x11, r24	; 17
	//Output
	DDRC = 0xFF; //set PORTC as outputs
 1d8:	87 b9       	out	0x07, r24	; 7
	PORTC = ~0x00; //outputs initially off
 1da:	88 b9       	out	0x08, r24	; 8
 1dc:	08 95       	ret

000001de <main>:

int main(void)
{
	init_UART();
	init_ADC();
	io_init();
 1de:	43 d0       	rcall	.+134    	; 0x266 <init_UART>
 1e0:	a1 df       	rcall	.-190    	; 0x124 <init_ADC>
	init_timer0();
 1e2:	f5 df       	rcall	.-22     	; 0x1ce <io_init>
 1e4:	56 d0       	rcall	.+172    	; 0x292 <init_timer0>
	
		if(PUSHBUTTON)
		{
				ADC_value0 = read_ADC(0);
				PORTC = ~ADC_value0;
				printf("\nThe voltage is %d V", ADC_value0);
 1e6:	cd e1       	ldi	r28, 0x1D	; 29
	//uint16_t ADC_value2;
	
    while (1) 
    {
	
		if(PUSHBUTTON)
 1e8:	d2 e0       	ldi	r29, 0x02	; 2
 1ea:	00 99       	sbic	0x00, 0	; 0
		{
				ADC_value0 = read_ADC(0);
 1ec:	11 c0       	rjmp	.+34     	; 0x210 <main+0x32>
 1ee:	80 e0       	ldi	r24, 0x00	; 0
 1f0:	a6 df       	rcall	.-180    	; 0x13e <read_ADC>
				PORTC = ~ADC_value0;
 1f2:	98 2f       	mov	r25, r24
 1f4:	90 95       	com	r25
				printf("\nThe voltage is %d V", ADC_value0);
 1f6:	98 b9       	out	0x08, r25	; 8
 1f8:	1f 92       	push	r1
 1fa:	8f 93       	push	r24
 1fc:	df 93       	push	r29
 1fe:	cf 93       	push	r28
					
				timer(500);
 200:	69 d0       	rcall	.+210    	; 0x2d4 <printf>
 202:	84 ef       	ldi	r24, 0xF4	; 244
 204:	91 e0       	ldi	r25, 0x01	; 1
 206:	53 d0       	rcall	.+166    	; 0x2ae <timer>
 208:	0f 90       	pop	r0
 20a:	0f 90       	pop	r0
 20c:	0f 90       	pop	r0
		}

		if(PUSHBUTTON2)
 20e:	0f 90       	pop	r0
 210:	01 99       	sbic	0x00, 1	; 0
		{
				ADC_value1 = readten_ADC(1);
 212:	eb cf       	rjmp	.-42     	; 0x1ea <main+0xc>
 214:	81 e0       	ldi	r24, 0x01	; 1
 216:	b5 df       	rcall	.-150    	; 0x182 <readten_ADC>
				PORTC = ~(ADC_value1 >> 2);
 218:	9c 01       	movw	r18, r24
 21a:	36 95       	lsr	r19
 21c:	27 95       	ror	r18
 21e:	36 95       	lsr	r19
 220:	27 95       	ror	r18
				printf("\nThe voltage is %d V", ADC_value1);		
 222:	20 95       	com	r18
 224:	28 b9       	out	0x08, r18	; 8
 226:	9f 93       	push	r25
 228:	8f 93       	push	r24
 22a:	df 93       	push	r29
 22c:	cf 93       	push	r28
				
				timer(500);
 22e:	52 d0       	rcall	.+164    	; 0x2d4 <printf>
 230:	84 ef       	ldi	r24, 0xF4	; 244
 232:	91 e0       	ldi	r25, 0x01	; 1
 234:	3c d0       	rcall	.+120    	; 0x2ae <timer>
 236:	0f 90       	pop	r0
 238:	0f 90       	pop	r0
 23a:	0f 90       	pop	r0
 23c:	0f 90       	pop	r0
 23e:	d5 cf       	rjmp	.-86     	; 0x1ea <main+0xc>

00000240 <uart_putchar>:
 240:	e0 ec       	ldi	r30, 0xC0	; 192
 242:	f0 e0       	ldi	r31, 0x00	; 0
 244:	90 81       	ld	r25, Z
 246:	95 ff       	sbrs	r25, 5
 248:	fd cf       	rjmp	.-6      	; 0x244 <uart_putchar+0x4>
 24a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 24e:	80 e0       	ldi	r24, 0x00	; 0
 250:	90 e0       	ldi	r25, 0x00	; 0
 252:	08 95       	ret

00000254 <uart_getch>:
 254:	e0 ec       	ldi	r30, 0xC0	; 192
 256:	f0 e0       	ldi	r31, 0x00	; 0
 258:	80 81       	ld	r24, Z
 25a:	88 23       	and	r24, r24
 25c:	ec f7       	brge	.-6      	; 0x258 <uart_getch+0x4>
 25e:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 262:	90 e0       	ldi	r25, 0x00	; 0
 264:	08 95       	ret

00000266 <init_UART>:
 266:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7000c0>
 26a:	88 e1       	ldi	r24, 0x18	; 24
 26c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
 270:	86 e0       	ldi	r24, 0x06	; 6
 272:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
 276:	87 e6       	ldi	r24, 0x67	; 103
 278:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 27c:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 280:	e2 e3       	ldi	r30, 0x32	; 50
 282:	f2 e0       	ldi	r31, 0x02	; 2
 284:	80 e0       	ldi	r24, 0x00	; 0
 286:	92 e0       	ldi	r25, 0x02	; 2
 288:	93 83       	std	Z+3, r25	; 0x03
 28a:	82 83       	std	Z+2, r24	; 0x02
 28c:	91 83       	std	Z+1, r25	; 0x01
 28e:	80 83       	st	Z, r24
 290:	08 95       	ret

00000292 <init_timer0>:
 292:	16 bc       	out	0x26, r1	; 38
 294:	80 e1       	ldi	r24, 0x10	; 16
 296:	87 bd       	out	0x27, r24	; 39
 298:	14 bc       	out	0x24, r1	; 36
 29a:	15 bc       	out	0x25, r1	; 37
 29c:	08 95       	ret

0000029e <custom_timer>:
 29e:	85 e0       	ldi	r24, 0x05	; 5
 2a0:	85 bd       	out	0x25, r24	; 37
 2a2:	a9 9b       	sbis	0x15, 1	; 21
 2a4:	fe cf       	rjmp	.-4      	; 0x2a2 <custom_timer+0x4>
 2a6:	15 bc       	out	0x25, r1	; 37
 2a8:	a9 9a       	sbi	0x15, 1	; 21
 2aa:	16 bc       	out	0x26, r1	; 38
 2ac:	08 95       	ret

000002ae <timer>:
 2ae:	0f 93       	push	r16
 2b0:	1f 93       	push	r17
 2b2:	cf 93       	push	r28
 2b4:	df 93       	push	r29
 2b6:	00 97       	sbiw	r24, 0x00	; 0
 2b8:	41 f0       	breq	.+16     	; 0x2ca <timer+0x1c>
 2ba:	8c 01       	movw	r16, r24
 2bc:	c0 e0       	ldi	r28, 0x00	; 0
 2be:	d0 e0       	ldi	r29, 0x00	; 0
 2c0:	ee df       	rcall	.-36     	; 0x29e <custom_timer>
 2c2:	21 96       	adiw	r28, 0x01	; 1
 2c4:	0c 17       	cp	r16, r28
 2c6:	1d 07       	cpc	r17, r29
 2c8:	d9 f7       	brne	.-10     	; 0x2c0 <timer+0x12>
 2ca:	df 91       	pop	r29
 2cc:	cf 91       	pop	r28
 2ce:	1f 91       	pop	r17
 2d0:	0f 91       	pop	r16
 2d2:	08 95       	ret

000002d4 <printf>:
 2d4:	cf 93       	push	r28
 2d6:	df 93       	push	r29
 2d8:	cd b7       	in	r28, 0x3d	; 61
 2da:	de b7       	in	r29, 0x3e	; 62
 2dc:	ae 01       	movw	r20, r28
 2de:	4a 5f       	subi	r20, 0xFA	; 250
 2e0:	5f 4f       	sbci	r21, 0xFF	; 255
 2e2:	fa 01       	movw	r30, r20
 2e4:	61 91       	ld	r22, Z+
 2e6:	71 91       	ld	r23, Z+
 2e8:	af 01       	movw	r20, r30
 2ea:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <__data_end+0x2>
 2ee:	90 91 35 02 	lds	r25, 0x0235	; 0x800235 <__data_end+0x3>
 2f2:	03 d0       	rcall	.+6      	; 0x2fa <vfprintf>
 2f4:	df 91       	pop	r29
 2f6:	cf 91       	pop	r28
 2f8:	08 95       	ret

000002fa <vfprintf>:
 2fa:	2f 92       	push	r2
 2fc:	3f 92       	push	r3
 2fe:	4f 92       	push	r4
 300:	5f 92       	push	r5
 302:	6f 92       	push	r6
 304:	7f 92       	push	r7
 306:	8f 92       	push	r8
 308:	9f 92       	push	r9
 30a:	af 92       	push	r10
 30c:	bf 92       	push	r11
 30e:	cf 92       	push	r12
 310:	df 92       	push	r13
 312:	ef 92       	push	r14
 314:	ff 92       	push	r15
 316:	0f 93       	push	r16
 318:	1f 93       	push	r17
 31a:	cf 93       	push	r28
 31c:	df 93       	push	r29
 31e:	cd b7       	in	r28, 0x3d	; 61
 320:	de b7       	in	r29, 0x3e	; 62
 322:	2b 97       	sbiw	r28, 0x0b	; 11
 324:	0f b6       	in	r0, 0x3f	; 63
 326:	f8 94       	cli
 328:	de bf       	out	0x3e, r29	; 62
 32a:	0f be       	out	0x3f, r0	; 63
 32c:	cd bf       	out	0x3d, r28	; 61
 32e:	6c 01       	movw	r12, r24
 330:	7b 01       	movw	r14, r22
 332:	8a 01       	movw	r16, r20
 334:	fc 01       	movw	r30, r24
 336:	17 82       	std	Z+7, r1	; 0x07
 338:	16 82       	std	Z+6, r1	; 0x06
 33a:	83 81       	ldd	r24, Z+3	; 0x03
 33c:	81 ff       	sbrs	r24, 1
 33e:	bf c1       	rjmp	.+894    	; 0x6be <__LOCK_REGION_LENGTH__+0x2be>
 340:	ce 01       	movw	r24, r28
 342:	01 96       	adiw	r24, 0x01	; 1
 344:	3c 01       	movw	r6, r24
 346:	f6 01       	movw	r30, r12
 348:	93 81       	ldd	r25, Z+3	; 0x03
 34a:	f7 01       	movw	r30, r14
 34c:	93 fd       	sbrc	r25, 3
 34e:	85 91       	lpm	r24, Z+
 350:	93 ff       	sbrs	r25, 3
 352:	81 91       	ld	r24, Z+
 354:	7f 01       	movw	r14, r30
 356:	88 23       	and	r24, r24
 358:	09 f4       	brne	.+2      	; 0x35c <vfprintf+0x62>
 35a:	ad c1       	rjmp	.+858    	; 0x6b6 <__LOCK_REGION_LENGTH__+0x2b6>
 35c:	85 32       	cpi	r24, 0x25	; 37
 35e:	39 f4       	brne	.+14     	; 0x36e <vfprintf+0x74>
 360:	93 fd       	sbrc	r25, 3
 362:	85 91       	lpm	r24, Z+
 364:	93 ff       	sbrs	r25, 3
 366:	81 91       	ld	r24, Z+
 368:	7f 01       	movw	r14, r30
 36a:	85 32       	cpi	r24, 0x25	; 37
 36c:	21 f4       	brne	.+8      	; 0x376 <vfprintf+0x7c>
 36e:	b6 01       	movw	r22, r12
 370:	90 e0       	ldi	r25, 0x00	; 0
 372:	d6 d1       	rcall	.+940    	; 0x720 <fputc>
 374:	e8 cf       	rjmp	.-48     	; 0x346 <vfprintf+0x4c>
 376:	91 2c       	mov	r9, r1
 378:	21 2c       	mov	r2, r1
 37a:	31 2c       	mov	r3, r1
 37c:	ff e1       	ldi	r31, 0x1F	; 31
 37e:	f3 15       	cp	r31, r3
 380:	d8 f0       	brcs	.+54     	; 0x3b8 <vfprintf+0xbe>
 382:	8b 32       	cpi	r24, 0x2B	; 43
 384:	79 f0       	breq	.+30     	; 0x3a4 <vfprintf+0xaa>
 386:	38 f4       	brcc	.+14     	; 0x396 <vfprintf+0x9c>
 388:	80 32       	cpi	r24, 0x20	; 32
 38a:	79 f0       	breq	.+30     	; 0x3aa <vfprintf+0xb0>
 38c:	83 32       	cpi	r24, 0x23	; 35
 38e:	a1 f4       	brne	.+40     	; 0x3b8 <vfprintf+0xbe>
 390:	23 2d       	mov	r18, r3
 392:	20 61       	ori	r18, 0x10	; 16
 394:	1d c0       	rjmp	.+58     	; 0x3d0 <vfprintf+0xd6>
 396:	8d 32       	cpi	r24, 0x2D	; 45
 398:	61 f0       	breq	.+24     	; 0x3b2 <vfprintf+0xb8>
 39a:	80 33       	cpi	r24, 0x30	; 48
 39c:	69 f4       	brne	.+26     	; 0x3b8 <vfprintf+0xbe>
 39e:	23 2d       	mov	r18, r3
 3a0:	21 60       	ori	r18, 0x01	; 1
 3a2:	16 c0       	rjmp	.+44     	; 0x3d0 <vfprintf+0xd6>
 3a4:	83 2d       	mov	r24, r3
 3a6:	82 60       	ori	r24, 0x02	; 2
 3a8:	38 2e       	mov	r3, r24
 3aa:	e3 2d       	mov	r30, r3
 3ac:	e4 60       	ori	r30, 0x04	; 4
 3ae:	3e 2e       	mov	r3, r30
 3b0:	2a c0       	rjmp	.+84     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3b2:	f3 2d       	mov	r31, r3
 3b4:	f8 60       	ori	r31, 0x08	; 8
 3b6:	1d c0       	rjmp	.+58     	; 0x3f2 <vfprintf+0xf8>
 3b8:	37 fc       	sbrc	r3, 7
 3ba:	2d c0       	rjmp	.+90     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 3bc:	20 ed       	ldi	r18, 0xD0	; 208
 3be:	28 0f       	add	r18, r24
 3c0:	2a 30       	cpi	r18, 0x0A	; 10
 3c2:	40 f0       	brcs	.+16     	; 0x3d4 <vfprintf+0xda>
 3c4:	8e 32       	cpi	r24, 0x2E	; 46
 3c6:	b9 f4       	brne	.+46     	; 0x3f6 <vfprintf+0xfc>
 3c8:	36 fc       	sbrc	r3, 6
 3ca:	75 c1       	rjmp	.+746    	; 0x6b6 <__LOCK_REGION_LENGTH__+0x2b6>
 3cc:	23 2d       	mov	r18, r3
 3ce:	20 64       	ori	r18, 0x40	; 64
 3d0:	32 2e       	mov	r3, r18
 3d2:	19 c0       	rjmp	.+50     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3d4:	36 fe       	sbrs	r3, 6
 3d6:	06 c0       	rjmp	.+12     	; 0x3e4 <vfprintf+0xea>
 3d8:	8a e0       	ldi	r24, 0x0A	; 10
 3da:	98 9e       	mul	r9, r24
 3dc:	20 0d       	add	r18, r0
 3de:	11 24       	eor	r1, r1
 3e0:	92 2e       	mov	r9, r18
 3e2:	11 c0       	rjmp	.+34     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3e4:	ea e0       	ldi	r30, 0x0A	; 10
 3e6:	2e 9e       	mul	r2, r30
 3e8:	20 0d       	add	r18, r0
 3ea:	11 24       	eor	r1, r1
 3ec:	22 2e       	mov	r2, r18
 3ee:	f3 2d       	mov	r31, r3
 3f0:	f0 62       	ori	r31, 0x20	; 32
 3f2:	3f 2e       	mov	r3, r31
 3f4:	08 c0       	rjmp	.+16     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3f6:	8c 36       	cpi	r24, 0x6C	; 108
 3f8:	21 f4       	brne	.+8      	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3fa:	83 2d       	mov	r24, r3
 3fc:	80 68       	ori	r24, 0x80	; 128
 3fe:	38 2e       	mov	r3, r24
 400:	02 c0       	rjmp	.+4      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 402:	88 36       	cpi	r24, 0x68	; 104
 404:	41 f4       	brne	.+16     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 406:	f7 01       	movw	r30, r14
 408:	93 fd       	sbrc	r25, 3
 40a:	85 91       	lpm	r24, Z+
 40c:	93 ff       	sbrs	r25, 3
 40e:	81 91       	ld	r24, Z+
 410:	7f 01       	movw	r14, r30
 412:	81 11       	cpse	r24, r1
 414:	b3 cf       	rjmp	.-154    	; 0x37c <vfprintf+0x82>
 416:	98 2f       	mov	r25, r24
 418:	9f 7d       	andi	r25, 0xDF	; 223
 41a:	95 54       	subi	r25, 0x45	; 69
 41c:	93 30       	cpi	r25, 0x03	; 3
 41e:	28 f4       	brcc	.+10     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 420:	0c 5f       	subi	r16, 0xFC	; 252
 422:	1f 4f       	sbci	r17, 0xFF	; 255
 424:	9f e3       	ldi	r25, 0x3F	; 63
 426:	99 83       	std	Y+1, r25	; 0x01
 428:	0d c0       	rjmp	.+26     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 42a:	83 36       	cpi	r24, 0x63	; 99
 42c:	31 f0       	breq	.+12     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 42e:	83 37       	cpi	r24, 0x73	; 115
 430:	71 f0       	breq	.+28     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 432:	83 35       	cpi	r24, 0x53	; 83
 434:	09 f0       	breq	.+2      	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 436:	55 c0       	rjmp	.+170    	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
 438:	20 c0       	rjmp	.+64     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 43a:	f8 01       	movw	r30, r16
 43c:	80 81       	ld	r24, Z
 43e:	89 83       	std	Y+1, r24	; 0x01
 440:	0e 5f       	subi	r16, 0xFE	; 254
 442:	1f 4f       	sbci	r17, 0xFF	; 255
 444:	88 24       	eor	r8, r8
 446:	83 94       	inc	r8
 448:	91 2c       	mov	r9, r1
 44a:	53 01       	movw	r10, r6
 44c:	12 c0       	rjmp	.+36     	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
 44e:	28 01       	movw	r4, r16
 450:	f2 e0       	ldi	r31, 0x02	; 2
 452:	4f 0e       	add	r4, r31
 454:	51 1c       	adc	r5, r1
 456:	f8 01       	movw	r30, r16
 458:	a0 80       	ld	r10, Z
 45a:	b1 80       	ldd	r11, Z+1	; 0x01
 45c:	36 fe       	sbrs	r3, 6
 45e:	03 c0       	rjmp	.+6      	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 460:	69 2d       	mov	r22, r9
 462:	70 e0       	ldi	r23, 0x00	; 0
 464:	02 c0       	rjmp	.+4      	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
 466:	6f ef       	ldi	r22, 0xFF	; 255
 468:	7f ef       	ldi	r23, 0xFF	; 255
 46a:	c5 01       	movw	r24, r10
 46c:	4e d1       	rcall	.+668    	; 0x70a <strnlen>
 46e:	4c 01       	movw	r8, r24
 470:	82 01       	movw	r16, r4
 472:	f3 2d       	mov	r31, r3
 474:	ff 77       	andi	r31, 0x7F	; 127
 476:	3f 2e       	mov	r3, r31
 478:	15 c0       	rjmp	.+42     	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
 47a:	28 01       	movw	r4, r16
 47c:	22 e0       	ldi	r18, 0x02	; 2
 47e:	42 0e       	add	r4, r18
 480:	51 1c       	adc	r5, r1
 482:	f8 01       	movw	r30, r16
 484:	a0 80       	ld	r10, Z
 486:	b1 80       	ldd	r11, Z+1	; 0x01
 488:	36 fe       	sbrs	r3, 6
 48a:	03 c0       	rjmp	.+6      	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
 48c:	69 2d       	mov	r22, r9
 48e:	70 e0       	ldi	r23, 0x00	; 0
 490:	02 c0       	rjmp	.+4      	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
 492:	6f ef       	ldi	r22, 0xFF	; 255
 494:	7f ef       	ldi	r23, 0xFF	; 255
 496:	c5 01       	movw	r24, r10
 498:	2d d1       	rcall	.+602    	; 0x6f4 <strnlen_P>
 49a:	4c 01       	movw	r8, r24
 49c:	f3 2d       	mov	r31, r3
 49e:	f0 68       	ori	r31, 0x80	; 128
 4a0:	3f 2e       	mov	r3, r31
 4a2:	82 01       	movw	r16, r4
 4a4:	33 fc       	sbrc	r3, 3
 4a6:	19 c0       	rjmp	.+50     	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
 4a8:	82 2d       	mov	r24, r2
 4aa:	90 e0       	ldi	r25, 0x00	; 0
 4ac:	88 16       	cp	r8, r24
 4ae:	99 06       	cpc	r9, r25
 4b0:	a0 f4       	brcc	.+40     	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
 4b2:	b6 01       	movw	r22, r12
 4b4:	80 e2       	ldi	r24, 0x20	; 32
 4b6:	90 e0       	ldi	r25, 0x00	; 0
 4b8:	33 d1       	rcall	.+614    	; 0x720 <fputc>
 4ba:	2a 94       	dec	r2
 4bc:	f5 cf       	rjmp	.-22     	; 0x4a8 <__LOCK_REGION_LENGTH__+0xa8>
 4be:	f5 01       	movw	r30, r10
 4c0:	37 fc       	sbrc	r3, 7
 4c2:	85 91       	lpm	r24, Z+
 4c4:	37 fe       	sbrs	r3, 7
 4c6:	81 91       	ld	r24, Z+
 4c8:	5f 01       	movw	r10, r30
 4ca:	b6 01       	movw	r22, r12
 4cc:	90 e0       	ldi	r25, 0x00	; 0
 4ce:	28 d1       	rcall	.+592    	; 0x720 <fputc>
 4d0:	21 10       	cpse	r2, r1
 4d2:	2a 94       	dec	r2
 4d4:	21 e0       	ldi	r18, 0x01	; 1
 4d6:	82 1a       	sub	r8, r18
 4d8:	91 08       	sbc	r9, r1
 4da:	81 14       	cp	r8, r1
 4dc:	91 04       	cpc	r9, r1
 4de:	79 f7       	brne	.-34     	; 0x4be <__LOCK_REGION_LENGTH__+0xbe>
 4e0:	e1 c0       	rjmp	.+450    	; 0x6a4 <__LOCK_REGION_LENGTH__+0x2a4>
 4e2:	84 36       	cpi	r24, 0x64	; 100
 4e4:	11 f0       	breq	.+4      	; 0x4ea <__LOCK_REGION_LENGTH__+0xea>
 4e6:	89 36       	cpi	r24, 0x69	; 105
 4e8:	39 f5       	brne	.+78     	; 0x538 <__LOCK_REGION_LENGTH__+0x138>
 4ea:	f8 01       	movw	r30, r16
 4ec:	37 fe       	sbrs	r3, 7
 4ee:	07 c0       	rjmp	.+14     	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 4f0:	60 81       	ld	r22, Z
 4f2:	71 81       	ldd	r23, Z+1	; 0x01
 4f4:	82 81       	ldd	r24, Z+2	; 0x02
 4f6:	93 81       	ldd	r25, Z+3	; 0x03
 4f8:	0c 5f       	subi	r16, 0xFC	; 252
 4fa:	1f 4f       	sbci	r17, 0xFF	; 255
 4fc:	08 c0       	rjmp	.+16     	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
 4fe:	60 81       	ld	r22, Z
 500:	71 81       	ldd	r23, Z+1	; 0x01
 502:	07 2e       	mov	r0, r23
 504:	00 0c       	add	r0, r0
 506:	88 0b       	sbc	r24, r24
 508:	99 0b       	sbc	r25, r25
 50a:	0e 5f       	subi	r16, 0xFE	; 254
 50c:	1f 4f       	sbci	r17, 0xFF	; 255
 50e:	f3 2d       	mov	r31, r3
 510:	ff 76       	andi	r31, 0x6F	; 111
 512:	3f 2e       	mov	r3, r31
 514:	97 ff       	sbrs	r25, 7
 516:	09 c0       	rjmp	.+18     	; 0x52a <__LOCK_REGION_LENGTH__+0x12a>
 518:	90 95       	com	r25
 51a:	80 95       	com	r24
 51c:	70 95       	com	r23
 51e:	61 95       	neg	r22
 520:	7f 4f       	sbci	r23, 0xFF	; 255
 522:	8f 4f       	sbci	r24, 0xFF	; 255
 524:	9f 4f       	sbci	r25, 0xFF	; 255
 526:	f0 68       	ori	r31, 0x80	; 128
 528:	3f 2e       	mov	r3, r31
 52a:	2a e0       	ldi	r18, 0x0A	; 10
 52c:	30 e0       	ldi	r19, 0x00	; 0
 52e:	a3 01       	movw	r20, r6
 530:	33 d1       	rcall	.+614    	; 0x798 <__ultoa_invert>
 532:	88 2e       	mov	r8, r24
 534:	86 18       	sub	r8, r6
 536:	44 c0       	rjmp	.+136    	; 0x5c0 <__LOCK_REGION_LENGTH__+0x1c0>
 538:	85 37       	cpi	r24, 0x75	; 117
 53a:	31 f4       	brne	.+12     	; 0x548 <__LOCK_REGION_LENGTH__+0x148>
 53c:	23 2d       	mov	r18, r3
 53e:	2f 7e       	andi	r18, 0xEF	; 239
 540:	b2 2e       	mov	r11, r18
 542:	2a e0       	ldi	r18, 0x0A	; 10
 544:	30 e0       	ldi	r19, 0x00	; 0
 546:	25 c0       	rjmp	.+74     	; 0x592 <__LOCK_REGION_LENGTH__+0x192>
 548:	93 2d       	mov	r25, r3
 54a:	99 7f       	andi	r25, 0xF9	; 249
 54c:	b9 2e       	mov	r11, r25
 54e:	8f 36       	cpi	r24, 0x6F	; 111
 550:	c1 f0       	breq	.+48     	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
 552:	18 f4       	brcc	.+6      	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
 554:	88 35       	cpi	r24, 0x58	; 88
 556:	79 f0       	breq	.+30     	; 0x576 <__LOCK_REGION_LENGTH__+0x176>
 558:	ae c0       	rjmp	.+348    	; 0x6b6 <__LOCK_REGION_LENGTH__+0x2b6>
 55a:	80 37       	cpi	r24, 0x70	; 112
 55c:	19 f0       	breq	.+6      	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
 55e:	88 37       	cpi	r24, 0x78	; 120
 560:	21 f0       	breq	.+8      	; 0x56a <__LOCK_REGION_LENGTH__+0x16a>
 562:	a9 c0       	rjmp	.+338    	; 0x6b6 <__LOCK_REGION_LENGTH__+0x2b6>
 564:	e9 2f       	mov	r30, r25
 566:	e0 61       	ori	r30, 0x10	; 16
 568:	be 2e       	mov	r11, r30
 56a:	b4 fe       	sbrs	r11, 4
 56c:	0d c0       	rjmp	.+26     	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 56e:	fb 2d       	mov	r31, r11
 570:	f4 60       	ori	r31, 0x04	; 4
 572:	bf 2e       	mov	r11, r31
 574:	09 c0       	rjmp	.+18     	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 576:	34 fe       	sbrs	r3, 4
 578:	0a c0       	rjmp	.+20     	; 0x58e <__LOCK_REGION_LENGTH__+0x18e>
 57a:	29 2f       	mov	r18, r25
 57c:	26 60       	ori	r18, 0x06	; 6
 57e:	b2 2e       	mov	r11, r18
 580:	06 c0       	rjmp	.+12     	; 0x58e <__LOCK_REGION_LENGTH__+0x18e>
 582:	28 e0       	ldi	r18, 0x08	; 8
 584:	30 e0       	ldi	r19, 0x00	; 0
 586:	05 c0       	rjmp	.+10     	; 0x592 <__LOCK_REGION_LENGTH__+0x192>
 588:	20 e1       	ldi	r18, 0x10	; 16
 58a:	30 e0       	ldi	r19, 0x00	; 0
 58c:	02 c0       	rjmp	.+4      	; 0x592 <__LOCK_REGION_LENGTH__+0x192>
 58e:	20 e1       	ldi	r18, 0x10	; 16
 590:	32 e0       	ldi	r19, 0x02	; 2
 592:	f8 01       	movw	r30, r16
 594:	b7 fe       	sbrs	r11, 7
 596:	07 c0       	rjmp	.+14     	; 0x5a6 <__LOCK_REGION_LENGTH__+0x1a6>
 598:	60 81       	ld	r22, Z
 59a:	71 81       	ldd	r23, Z+1	; 0x01
 59c:	82 81       	ldd	r24, Z+2	; 0x02
 59e:	93 81       	ldd	r25, Z+3	; 0x03
 5a0:	0c 5f       	subi	r16, 0xFC	; 252
 5a2:	1f 4f       	sbci	r17, 0xFF	; 255
 5a4:	06 c0       	rjmp	.+12     	; 0x5b2 <__LOCK_REGION_LENGTH__+0x1b2>
 5a6:	60 81       	ld	r22, Z
 5a8:	71 81       	ldd	r23, Z+1	; 0x01
 5aa:	80 e0       	ldi	r24, 0x00	; 0
 5ac:	90 e0       	ldi	r25, 0x00	; 0
 5ae:	0e 5f       	subi	r16, 0xFE	; 254
 5b0:	1f 4f       	sbci	r17, 0xFF	; 255
 5b2:	a3 01       	movw	r20, r6
 5b4:	f1 d0       	rcall	.+482    	; 0x798 <__ultoa_invert>
 5b6:	88 2e       	mov	r8, r24
 5b8:	86 18       	sub	r8, r6
 5ba:	fb 2d       	mov	r31, r11
 5bc:	ff 77       	andi	r31, 0x7F	; 127
 5be:	3f 2e       	mov	r3, r31
 5c0:	36 fe       	sbrs	r3, 6
 5c2:	0d c0       	rjmp	.+26     	; 0x5de <__LOCK_REGION_LENGTH__+0x1de>
 5c4:	23 2d       	mov	r18, r3
 5c6:	2e 7f       	andi	r18, 0xFE	; 254
 5c8:	a2 2e       	mov	r10, r18
 5ca:	89 14       	cp	r8, r9
 5cc:	58 f4       	brcc	.+22     	; 0x5e4 <__LOCK_REGION_LENGTH__+0x1e4>
 5ce:	34 fe       	sbrs	r3, 4
 5d0:	0b c0       	rjmp	.+22     	; 0x5e8 <__LOCK_REGION_LENGTH__+0x1e8>
 5d2:	32 fc       	sbrc	r3, 2
 5d4:	09 c0       	rjmp	.+18     	; 0x5e8 <__LOCK_REGION_LENGTH__+0x1e8>
 5d6:	83 2d       	mov	r24, r3
 5d8:	8e 7e       	andi	r24, 0xEE	; 238
 5da:	a8 2e       	mov	r10, r24
 5dc:	05 c0       	rjmp	.+10     	; 0x5e8 <__LOCK_REGION_LENGTH__+0x1e8>
 5de:	b8 2c       	mov	r11, r8
 5e0:	a3 2c       	mov	r10, r3
 5e2:	03 c0       	rjmp	.+6      	; 0x5ea <__LOCK_REGION_LENGTH__+0x1ea>
 5e4:	b8 2c       	mov	r11, r8
 5e6:	01 c0       	rjmp	.+2      	; 0x5ea <__LOCK_REGION_LENGTH__+0x1ea>
 5e8:	b9 2c       	mov	r11, r9
 5ea:	a4 fe       	sbrs	r10, 4
 5ec:	0f c0       	rjmp	.+30     	; 0x60c <__LOCK_REGION_LENGTH__+0x20c>
 5ee:	fe 01       	movw	r30, r28
 5f0:	e8 0d       	add	r30, r8
 5f2:	f1 1d       	adc	r31, r1
 5f4:	80 81       	ld	r24, Z
 5f6:	80 33       	cpi	r24, 0x30	; 48
 5f8:	21 f4       	brne	.+8      	; 0x602 <__LOCK_REGION_LENGTH__+0x202>
 5fa:	9a 2d       	mov	r25, r10
 5fc:	99 7e       	andi	r25, 0xE9	; 233
 5fe:	a9 2e       	mov	r10, r25
 600:	09 c0       	rjmp	.+18     	; 0x614 <__LOCK_REGION_LENGTH__+0x214>
 602:	a2 fe       	sbrs	r10, 2
 604:	06 c0       	rjmp	.+12     	; 0x612 <__LOCK_REGION_LENGTH__+0x212>
 606:	b3 94       	inc	r11
 608:	b3 94       	inc	r11
 60a:	04 c0       	rjmp	.+8      	; 0x614 <__LOCK_REGION_LENGTH__+0x214>
 60c:	8a 2d       	mov	r24, r10
 60e:	86 78       	andi	r24, 0x86	; 134
 610:	09 f0       	breq	.+2      	; 0x614 <__LOCK_REGION_LENGTH__+0x214>
 612:	b3 94       	inc	r11
 614:	a3 fc       	sbrc	r10, 3
 616:	10 c0       	rjmp	.+32     	; 0x638 <__LOCK_REGION_LENGTH__+0x238>
 618:	a0 fe       	sbrs	r10, 0
 61a:	06 c0       	rjmp	.+12     	; 0x628 <__LOCK_REGION_LENGTH__+0x228>
 61c:	b2 14       	cp	r11, r2
 61e:	80 f4       	brcc	.+32     	; 0x640 <__LOCK_REGION_LENGTH__+0x240>
 620:	28 0c       	add	r2, r8
 622:	92 2c       	mov	r9, r2
 624:	9b 18       	sub	r9, r11
 626:	0d c0       	rjmp	.+26     	; 0x642 <__LOCK_REGION_LENGTH__+0x242>
 628:	b2 14       	cp	r11, r2
 62a:	58 f4       	brcc	.+22     	; 0x642 <__LOCK_REGION_LENGTH__+0x242>
 62c:	b6 01       	movw	r22, r12
 62e:	80 e2       	ldi	r24, 0x20	; 32
 630:	90 e0       	ldi	r25, 0x00	; 0
 632:	76 d0       	rcall	.+236    	; 0x720 <fputc>
 634:	b3 94       	inc	r11
 636:	f8 cf       	rjmp	.-16     	; 0x628 <__LOCK_REGION_LENGTH__+0x228>
 638:	b2 14       	cp	r11, r2
 63a:	18 f4       	brcc	.+6      	; 0x642 <__LOCK_REGION_LENGTH__+0x242>
 63c:	2b 18       	sub	r2, r11
 63e:	02 c0       	rjmp	.+4      	; 0x644 <__LOCK_REGION_LENGTH__+0x244>
 640:	98 2c       	mov	r9, r8
 642:	21 2c       	mov	r2, r1
 644:	a4 fe       	sbrs	r10, 4
 646:	0f c0       	rjmp	.+30     	; 0x666 <__LOCK_REGION_LENGTH__+0x266>
 648:	b6 01       	movw	r22, r12
 64a:	80 e3       	ldi	r24, 0x30	; 48
 64c:	90 e0       	ldi	r25, 0x00	; 0
 64e:	68 d0       	rcall	.+208    	; 0x720 <fputc>
 650:	a2 fe       	sbrs	r10, 2
 652:	16 c0       	rjmp	.+44     	; 0x680 <__LOCK_REGION_LENGTH__+0x280>
 654:	a1 fc       	sbrc	r10, 1
 656:	03 c0       	rjmp	.+6      	; 0x65e <__LOCK_REGION_LENGTH__+0x25e>
 658:	88 e7       	ldi	r24, 0x78	; 120
 65a:	90 e0       	ldi	r25, 0x00	; 0
 65c:	02 c0       	rjmp	.+4      	; 0x662 <__LOCK_REGION_LENGTH__+0x262>
 65e:	88 e5       	ldi	r24, 0x58	; 88
 660:	90 e0       	ldi	r25, 0x00	; 0
 662:	b6 01       	movw	r22, r12
 664:	0c c0       	rjmp	.+24     	; 0x67e <__LOCK_REGION_LENGTH__+0x27e>
 666:	8a 2d       	mov	r24, r10
 668:	86 78       	andi	r24, 0x86	; 134
 66a:	51 f0       	breq	.+20     	; 0x680 <__LOCK_REGION_LENGTH__+0x280>
 66c:	a1 fe       	sbrs	r10, 1
 66e:	02 c0       	rjmp	.+4      	; 0x674 <__LOCK_REGION_LENGTH__+0x274>
 670:	8b e2       	ldi	r24, 0x2B	; 43
 672:	01 c0       	rjmp	.+2      	; 0x676 <__LOCK_REGION_LENGTH__+0x276>
 674:	80 e2       	ldi	r24, 0x20	; 32
 676:	a7 fc       	sbrc	r10, 7
 678:	8d e2       	ldi	r24, 0x2D	; 45
 67a:	b6 01       	movw	r22, r12
 67c:	90 e0       	ldi	r25, 0x00	; 0
 67e:	50 d0       	rcall	.+160    	; 0x720 <fputc>
 680:	89 14       	cp	r8, r9
 682:	30 f4       	brcc	.+12     	; 0x690 <__LOCK_REGION_LENGTH__+0x290>
 684:	b6 01       	movw	r22, r12
 686:	80 e3       	ldi	r24, 0x30	; 48
 688:	90 e0       	ldi	r25, 0x00	; 0
 68a:	4a d0       	rcall	.+148    	; 0x720 <fputc>
 68c:	9a 94       	dec	r9
 68e:	f8 cf       	rjmp	.-16     	; 0x680 <__LOCK_REGION_LENGTH__+0x280>
 690:	8a 94       	dec	r8
 692:	f3 01       	movw	r30, r6
 694:	e8 0d       	add	r30, r8
 696:	f1 1d       	adc	r31, r1
 698:	80 81       	ld	r24, Z
 69a:	b6 01       	movw	r22, r12
 69c:	90 e0       	ldi	r25, 0x00	; 0
 69e:	40 d0       	rcall	.+128    	; 0x720 <fputc>
 6a0:	81 10       	cpse	r8, r1
 6a2:	f6 cf       	rjmp	.-20     	; 0x690 <__LOCK_REGION_LENGTH__+0x290>
 6a4:	22 20       	and	r2, r2
 6a6:	09 f4       	brne	.+2      	; 0x6aa <__LOCK_REGION_LENGTH__+0x2aa>
 6a8:	4e ce       	rjmp	.-868    	; 0x346 <vfprintf+0x4c>
 6aa:	b6 01       	movw	r22, r12
 6ac:	80 e2       	ldi	r24, 0x20	; 32
 6ae:	90 e0       	ldi	r25, 0x00	; 0
 6b0:	37 d0       	rcall	.+110    	; 0x720 <fputc>
 6b2:	2a 94       	dec	r2
 6b4:	f7 cf       	rjmp	.-18     	; 0x6a4 <__LOCK_REGION_LENGTH__+0x2a4>
 6b6:	f6 01       	movw	r30, r12
 6b8:	86 81       	ldd	r24, Z+6	; 0x06
 6ba:	97 81       	ldd	r25, Z+7	; 0x07
 6bc:	02 c0       	rjmp	.+4      	; 0x6c2 <__LOCK_REGION_LENGTH__+0x2c2>
 6be:	8f ef       	ldi	r24, 0xFF	; 255
 6c0:	9f ef       	ldi	r25, 0xFF	; 255
 6c2:	2b 96       	adiw	r28, 0x0b	; 11
 6c4:	0f b6       	in	r0, 0x3f	; 63
 6c6:	f8 94       	cli
 6c8:	de bf       	out	0x3e, r29	; 62
 6ca:	0f be       	out	0x3f, r0	; 63
 6cc:	cd bf       	out	0x3d, r28	; 61
 6ce:	df 91       	pop	r29
 6d0:	cf 91       	pop	r28
 6d2:	1f 91       	pop	r17
 6d4:	0f 91       	pop	r16
 6d6:	ff 90       	pop	r15
 6d8:	ef 90       	pop	r14
 6da:	df 90       	pop	r13
 6dc:	cf 90       	pop	r12
 6de:	bf 90       	pop	r11
 6e0:	af 90       	pop	r10
 6e2:	9f 90       	pop	r9
 6e4:	8f 90       	pop	r8
 6e6:	7f 90       	pop	r7
 6e8:	6f 90       	pop	r6
 6ea:	5f 90       	pop	r5
 6ec:	4f 90       	pop	r4
 6ee:	3f 90       	pop	r3
 6f0:	2f 90       	pop	r2
 6f2:	08 95       	ret

000006f4 <strnlen_P>:
 6f4:	fc 01       	movw	r30, r24
 6f6:	05 90       	lpm	r0, Z+
 6f8:	61 50       	subi	r22, 0x01	; 1
 6fa:	70 40       	sbci	r23, 0x00	; 0
 6fc:	01 10       	cpse	r0, r1
 6fe:	d8 f7       	brcc	.-10     	; 0x6f6 <strnlen_P+0x2>
 700:	80 95       	com	r24
 702:	90 95       	com	r25
 704:	8e 0f       	add	r24, r30
 706:	9f 1f       	adc	r25, r31
 708:	08 95       	ret

0000070a <strnlen>:
 70a:	fc 01       	movw	r30, r24
 70c:	61 50       	subi	r22, 0x01	; 1
 70e:	70 40       	sbci	r23, 0x00	; 0
 710:	01 90       	ld	r0, Z+
 712:	01 10       	cpse	r0, r1
 714:	d8 f7       	brcc	.-10     	; 0x70c <strnlen+0x2>
 716:	80 95       	com	r24
 718:	90 95       	com	r25
 71a:	8e 0f       	add	r24, r30
 71c:	9f 1f       	adc	r25, r31
 71e:	08 95       	ret

00000720 <fputc>:
 720:	0f 93       	push	r16
 722:	1f 93       	push	r17
 724:	cf 93       	push	r28
 726:	df 93       	push	r29
 728:	fb 01       	movw	r30, r22
 72a:	23 81       	ldd	r18, Z+3	; 0x03
 72c:	21 fd       	sbrc	r18, 1
 72e:	03 c0       	rjmp	.+6      	; 0x736 <fputc+0x16>
 730:	8f ef       	ldi	r24, 0xFF	; 255
 732:	9f ef       	ldi	r25, 0xFF	; 255
 734:	2c c0       	rjmp	.+88     	; 0x78e <fputc+0x6e>
 736:	22 ff       	sbrs	r18, 2
 738:	16 c0       	rjmp	.+44     	; 0x766 <fputc+0x46>
 73a:	46 81       	ldd	r20, Z+6	; 0x06
 73c:	57 81       	ldd	r21, Z+7	; 0x07
 73e:	24 81       	ldd	r18, Z+4	; 0x04
 740:	35 81       	ldd	r19, Z+5	; 0x05
 742:	42 17       	cp	r20, r18
 744:	53 07       	cpc	r21, r19
 746:	44 f4       	brge	.+16     	; 0x758 <fputc+0x38>
 748:	a0 81       	ld	r26, Z
 74a:	b1 81       	ldd	r27, Z+1	; 0x01
 74c:	9d 01       	movw	r18, r26
 74e:	2f 5f       	subi	r18, 0xFF	; 255
 750:	3f 4f       	sbci	r19, 0xFF	; 255
 752:	31 83       	std	Z+1, r19	; 0x01
 754:	20 83       	st	Z, r18
 756:	8c 93       	st	X, r24
 758:	26 81       	ldd	r18, Z+6	; 0x06
 75a:	37 81       	ldd	r19, Z+7	; 0x07
 75c:	2f 5f       	subi	r18, 0xFF	; 255
 75e:	3f 4f       	sbci	r19, 0xFF	; 255
 760:	37 83       	std	Z+7, r19	; 0x07
 762:	26 83       	std	Z+6, r18	; 0x06
 764:	14 c0       	rjmp	.+40     	; 0x78e <fputc+0x6e>
 766:	8b 01       	movw	r16, r22
 768:	ec 01       	movw	r28, r24
 76a:	fb 01       	movw	r30, r22
 76c:	00 84       	ldd	r0, Z+8	; 0x08
 76e:	f1 85       	ldd	r31, Z+9	; 0x09
 770:	e0 2d       	mov	r30, r0
 772:	19 95       	eicall
 774:	89 2b       	or	r24, r25
 776:	e1 f6       	brne	.-72     	; 0x730 <fputc+0x10>
 778:	d8 01       	movw	r26, r16
 77a:	16 96       	adiw	r26, 0x06	; 6
 77c:	8d 91       	ld	r24, X+
 77e:	9c 91       	ld	r25, X
 780:	17 97       	sbiw	r26, 0x07	; 7
 782:	01 96       	adiw	r24, 0x01	; 1
 784:	17 96       	adiw	r26, 0x07	; 7
 786:	9c 93       	st	X, r25
 788:	8e 93       	st	-X, r24
 78a:	16 97       	sbiw	r26, 0x06	; 6
 78c:	ce 01       	movw	r24, r28
 78e:	df 91       	pop	r29
 790:	cf 91       	pop	r28
 792:	1f 91       	pop	r17
 794:	0f 91       	pop	r16
 796:	08 95       	ret

00000798 <__ultoa_invert>:
 798:	fa 01       	movw	r30, r20
 79a:	aa 27       	eor	r26, r26
 79c:	28 30       	cpi	r18, 0x08	; 8
 79e:	51 f1       	breq	.+84     	; 0x7f4 <__ultoa_invert+0x5c>
 7a0:	20 31       	cpi	r18, 0x10	; 16
 7a2:	81 f1       	breq	.+96     	; 0x804 <__ultoa_invert+0x6c>
 7a4:	e8 94       	clt
 7a6:	6f 93       	push	r22
 7a8:	6e 7f       	andi	r22, 0xFE	; 254
 7aa:	6e 5f       	subi	r22, 0xFE	; 254
 7ac:	7f 4f       	sbci	r23, 0xFF	; 255
 7ae:	8f 4f       	sbci	r24, 0xFF	; 255
 7b0:	9f 4f       	sbci	r25, 0xFF	; 255
 7b2:	af 4f       	sbci	r26, 0xFF	; 255
 7b4:	b1 e0       	ldi	r27, 0x01	; 1
 7b6:	3e d0       	rcall	.+124    	; 0x834 <__ultoa_invert+0x9c>
 7b8:	b4 e0       	ldi	r27, 0x04	; 4
 7ba:	3c d0       	rcall	.+120    	; 0x834 <__ultoa_invert+0x9c>
 7bc:	67 0f       	add	r22, r23
 7be:	78 1f       	adc	r23, r24
 7c0:	89 1f       	adc	r24, r25
 7c2:	9a 1f       	adc	r25, r26
 7c4:	a1 1d       	adc	r26, r1
 7c6:	68 0f       	add	r22, r24
 7c8:	79 1f       	adc	r23, r25
 7ca:	8a 1f       	adc	r24, r26
 7cc:	91 1d       	adc	r25, r1
 7ce:	a1 1d       	adc	r26, r1
 7d0:	6a 0f       	add	r22, r26
 7d2:	71 1d       	adc	r23, r1
 7d4:	81 1d       	adc	r24, r1
 7d6:	91 1d       	adc	r25, r1
 7d8:	a1 1d       	adc	r26, r1
 7da:	20 d0       	rcall	.+64     	; 0x81c <__ultoa_invert+0x84>
 7dc:	09 f4       	brne	.+2      	; 0x7e0 <__ultoa_invert+0x48>
 7de:	68 94       	set
 7e0:	3f 91       	pop	r19
 7e2:	2a e0       	ldi	r18, 0x0A	; 10
 7e4:	26 9f       	mul	r18, r22
 7e6:	11 24       	eor	r1, r1
 7e8:	30 19       	sub	r19, r0
 7ea:	30 5d       	subi	r19, 0xD0	; 208
 7ec:	31 93       	st	Z+, r19
 7ee:	de f6       	brtc	.-74     	; 0x7a6 <__ultoa_invert+0xe>
 7f0:	cf 01       	movw	r24, r30
 7f2:	08 95       	ret
 7f4:	46 2f       	mov	r20, r22
 7f6:	47 70       	andi	r20, 0x07	; 7
 7f8:	40 5d       	subi	r20, 0xD0	; 208
 7fa:	41 93       	st	Z+, r20
 7fc:	b3 e0       	ldi	r27, 0x03	; 3
 7fe:	0f d0       	rcall	.+30     	; 0x81e <__ultoa_invert+0x86>
 800:	c9 f7       	brne	.-14     	; 0x7f4 <__ultoa_invert+0x5c>
 802:	f6 cf       	rjmp	.-20     	; 0x7f0 <__ultoa_invert+0x58>
 804:	46 2f       	mov	r20, r22
 806:	4f 70       	andi	r20, 0x0F	; 15
 808:	40 5d       	subi	r20, 0xD0	; 208
 80a:	4a 33       	cpi	r20, 0x3A	; 58
 80c:	18 f0       	brcs	.+6      	; 0x814 <__ultoa_invert+0x7c>
 80e:	49 5d       	subi	r20, 0xD9	; 217
 810:	31 fd       	sbrc	r19, 1
 812:	40 52       	subi	r20, 0x20	; 32
 814:	41 93       	st	Z+, r20
 816:	02 d0       	rcall	.+4      	; 0x81c <__ultoa_invert+0x84>
 818:	a9 f7       	brne	.-22     	; 0x804 <__ultoa_invert+0x6c>
 81a:	ea cf       	rjmp	.-44     	; 0x7f0 <__ultoa_invert+0x58>
 81c:	b4 e0       	ldi	r27, 0x04	; 4
 81e:	a6 95       	lsr	r26
 820:	97 95       	ror	r25
 822:	87 95       	ror	r24
 824:	77 95       	ror	r23
 826:	67 95       	ror	r22
 828:	ba 95       	dec	r27
 82a:	c9 f7       	brne	.-14     	; 0x81e <__ultoa_invert+0x86>
 82c:	00 97       	sbiw	r24, 0x00	; 0
 82e:	61 05       	cpc	r22, r1
 830:	71 05       	cpc	r23, r1
 832:	08 95       	ret
 834:	9b 01       	movw	r18, r22
 836:	ac 01       	movw	r20, r24
 838:	0a 2e       	mov	r0, r26
 83a:	06 94       	lsr	r0
 83c:	57 95       	ror	r21
 83e:	47 95       	ror	r20
 840:	37 95       	ror	r19
 842:	27 95       	ror	r18
 844:	ba 95       	dec	r27
 846:	c9 f7       	brne	.-14     	; 0x83a <__ultoa_invert+0xa2>
 848:	62 0f       	add	r22, r18
 84a:	73 1f       	adc	r23, r19
 84c:	84 1f       	adc	r24, r20
 84e:	95 1f       	adc	r25, r21
 850:	a0 1d       	adc	r26, r0
 852:	08 95       	ret

00000854 <_exit>:
 854:	f8 94       	cli

00000856 <__stop_program>:
 856:	ff cf       	rjmp	.-2      	; 0x856 <__stop_program>
